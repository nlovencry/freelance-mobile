import 'dart:convert';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
///
String createDataParamToJson(CreateDataParam data) => jsonEncode(data.toJson());

class CreateDataParamDataTurbine {
/*
{
  "A": [
    40.5
  ],
  "B": [
    40.5
  ],
  "C": [
    40.5
  ],
  "D": [
    40.5
  ]
} 
*/

  List<double?>? A;
  List<double?>? B;
  List<double?>? C;
  List<double?>? D;

  CreateDataParamDataTurbine({
    this.A,
    this.B,
    this.C,
    this.D,
  });
  CreateDataParamDataTurbine.fromJson(Map<String, dynamic> json) {
    if (json['A'] != null) {
      final v = json['A'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      A = arr0;
    }
    if (json['B'] != null) {
      final v = json['B'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      B = arr0;
    }
    if (json['C'] != null) {
      final v = json['C'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      C = arr0;
    }
    if (json['D'] != null) {
      final v = json['D'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      D = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (A != null) {
      final v = A;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['A'] = arr0;
    }
    if (B != null) {
      final v = B;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['B'] = arr0;
    }
    if (C != null) {
      final v = C;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['C'] = arr0;
    }
    if (D != null) {
      final v = D;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['D'] = arr0;
    }
    return data;
  }
}

class CreateDataParamDataClutch {
/*
{
  "A": [
    40.5
  ],
  "B": [
    40.5
  ],
  "C": [
    40.5
  ],
  "D": [
    40.5
  ]
} 
*/

  List<double?>? A;
  List<double?>? B;
  List<double?>? C;
  List<double?>? D;

  CreateDataParamDataClutch({
    this.A,
    this.B,
    this.C,
    this.D,
  });
  CreateDataParamDataClutch.fromJson(Map<String, dynamic> json) {
    if (json['A'] != null) {
      final v = json['A'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      A = arr0;
    }
    if (json['B'] != null) {
      final v = json['B'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      B = arr0;
    }
    if (json['C'] != null) {
      final v = json['C'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      C = arr0;
    }
    if (json['D'] != null) {
      final v = json['D'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      D = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (A != null) {
      final v = A;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['A'] = arr0;
    }
    if (B != null) {
      final v = B;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['B'] = arr0;
    }
    if (C != null) {
      final v = C;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['C'] = arr0;
    }
    if (D != null) {
      final v = D;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['D'] = arr0;
    }
    return data;
  }
}

class CreateDataParamDataUpper {
/*
{
  "A": [
    40.5
  ],
  "B": [
    40.5
  ],
  "C": [
    40.5
  ],
  "D": [
    40.5
  ]
} 
*/

  List<double?>? A;
  List<double?>? B;
  List<double?>? C;
  List<double?>? D;

  CreateDataParamDataUpper({
    this.A,
    this.B,
    this.C,
    this.D,
  });
  CreateDataParamDataUpper.fromJson(Map<String, dynamic> json) {
    if (json['A'] != null) {
      final v = json['A'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      A = arr0;
    }
    if (json['B'] != null) {
      final v = json['B'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      B = arr0;
    }
    if (json['C'] != null) {
      final v = json['C'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      C = arr0;
    }
    if (json['D'] != null) {
      final v = json['D'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      D = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (A != null) {
      final v = A;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['A'] = arr0;
    }
    if (B != null) {
      final v = B;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['B'] = arr0;
    }
    if (C != null) {
      final v = C;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['C'] = arr0;
    }
    if (D != null) {
      final v = D;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['D'] = arr0;
    }
    return data;
  }
}

class CreateDataParamData {
/*
{
  "Upper": {
    "A": [
      40.5
    ],
    "B": [
      40.5
    ],
    "C": [
      40.5
    ],
    "D": [
      40.5
    ]
  },
  "Clutch": {
    "A": [
      40.5
    ],
    "B": [
      40.5
    ],
    "C": [
      40.5
    ],
    "D": [
      40.5
    ]
  },
  "Turbine": {
    "A": [
      40.5
    ],
    "B": [
      40.5
    ],
    "C": [
      40.5
    ],
    "D": [
      40.5
    ]
  }
} 
*/

  CreateDataParamDataUpper? Upper;
  CreateDataParamDataClutch? Clutch;
  CreateDataParamDataTurbine? Turbine;

  CreateDataParamData({
    this.Upper,
    this.Clutch,
    this.Turbine,
  });
  CreateDataParamData.fromJson(Map<String, dynamic> json) {
    Upper = (json['Upper'] != null)
        ? CreateDataParamDataUpper.fromJson(json['Upper'])
        : null;
    Clutch = (json['Clutch'] != null)
        ? CreateDataParamDataClutch.fromJson(json['Clutch'])
        : null;
    Turbine = (json['Turbine'] != null)
        ? CreateDataParamDataTurbine.fromJson(json['Turbine'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (Upper != null) {
      data['Upper'] = Upper!.toJson();
    }
    if (Clutch != null) {
      data['Clutch'] = Clutch!.toJson();
    }
    if (Turbine != null) {
      data['Turbine'] = Turbine!.toJson();
    }
    return data;
  }
}

class CreateDataParam {
/*
{
  "TowerId": "01J06EX7EJHFXC47Y6AE8SSPTC",
  "GenBearingToCoupling": 440,
  "CouplingToTurbine": 424,
  "Data": {
    "Upper": {
      "A": [
        40.5
      ],
      "B": [
        40.5
      ],
      "C": [
        40.5
      ],
      "D": [
        40.5
      ]
    },
    "Clutch": {
      "A": [
        40.5
      ],
      "B": [
        40.5
      ],
      "C": [
        40.5
      ],
      "D": [
        40.5
      ]
    },
    "Turbine": {
      "A": [
        40.5
      ],
      "B": [
        40.5
      ],
      "C": [
        40.5
      ],
      "D": [
        40.5
      ]
    }
  }
} 
*/

  String? TowerId;
  String? GenBearingToCoupling;
  String? CouplingToTurbine;
  CreateDataParamData? Data;

  CreateDataParam({
    this.TowerId,
    this.GenBearingToCoupling,
    this.CouplingToTurbine,
    this.Data,
  });
  CreateDataParam.fromJson(Map<String, dynamic> json) {
    TowerId = json['TowerId']?.toString();
    GenBearingToCoupling = json['GenBearingToCoupling']?.toInt();
    CouplingToTurbine = json['CouplingToTurbine']?.toInt();
    Data = (json['Data'] != null)
        ? CreateDataParamData.fromJson(json['Data'])
        : null;
  }
  Map<String, String> toJson() {
    final data = <String, String>{};
    data['TowerId'] = TowerId ?? '';
    data['GenBearingToCoupling'] = GenBearingToCoupling ?? '';
    data['CouplingToTurbine'] = CouplingToTurbine ?? '';
    if (Data != null) {
      data['Data'] = jsonEncode(Data!.toJson());
    }
    return data;
  }
}
