///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BAModelDataCabang {
/*
{
  "id": 27,
  "regional_code": "REG02",
  "code": "CAB27",
  "name": "KANTOR PUSAT",
  "description": "KANTOR PUSAT PT BIMA",
  "regional_name": "ANAK PERUSAHAAN",
  "is_delete": 0,
  "created_at": null,
  "created_by": null,
  "updated_at": 1698287966,
  "updated_by": 747,
  "unit_centra_id": 425,
  "unit_centra_code": "BIMA",
  "unit_centra_name": "PT BIMA",
  "delivery_point": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
  "address": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
  "is_mr": 0
} 
*/

  String? id;
  String? regionalCode;
  String? code;
  String? name;
  String? description;
  String? regionalName;
  String? isDelete;
  String? createdAt;
  String? createdBy;
  String? updatedAt;
  String? updatedBy;
  String? unitCentraId;
  String? unitCentraCode;
  String? unitCentraName;
  String? deliveryPoint;
  String? address;
  String? isMr;

  BAModelDataCabang({
    this.id,
    this.regionalCode,
    this.code,
    this.name,
    this.description,
    this.regionalName,
    this.isDelete,
    this.createdAt,
    this.createdBy,
    this.updatedAt,
    this.updatedBy,
    this.unitCentraId,
    this.unitCentraCode,
    this.unitCentraName,
    this.deliveryPoint,
    this.address,
    this.isMr,
  });
  BAModelDataCabang.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    regionalCode = json['regional_code']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    regionalName = json['regional_name']?.toString();
    isDelete = json['is_delete']?.toString();
    createdAt = json['created_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedAt = json['updated_at']?.toString();
    updatedBy = json['updated_by']?.toString();
    unitCentraId = json['unit_centra_id']?.toString();
    unitCentraCode = json['unit_centra_code']?.toString();
    unitCentraName = json['unit_centra_name']?.toString();
    deliveryPoint = json['delivery_point']?.toString();
    address = json['address']?.toString();
    isMr = json['is_mr']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['regional_code'] = regionalCode;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['regional_name'] = regionalName;
    data['is_delete'] = isDelete;
    data['created_at'] = createdAt;
    data['created_by'] = createdBy;
    data['updated_at'] = updatedAt;
    data['updated_by'] = updatedBy;
    data['unit_centra_id'] = unitCentraId;
    data['unit_centra_code'] = unitCentraCode;
    data['unit_centra_name'] = unitCentraName;
    data['delivery_point'] = deliveryPoint;
    data['address'] = address;
    data['is_mr'] = isMr;
    return data;
  }
}

class BAModelDataAsset {
/*
{
  "id": 543,
  "code": "ATRIA-00001",
  "name": "Aset BIMA",
  "kapasitas": "1000",
  "merk": "BIMA",
  "country_of_origin": null,
  "equipment_serial_number": null,
  "model": null,
  "power_source": null,
  "merk_engine": null,
  "engine_type": null,
  "serial_number_engine": null,
  "jenis_asset_code": "A01",
  "regional_code": "REG05",
  "cabang_code": "CAB27",
  "tahun": 2023,
  "is_delete": 0,
  "is_downtime": 1,
  "is_active": 1,
  "company_id": 1,
  "doc_status": "Completed",
  "apv_level": 2,
  "created_at": "1692089727",
  "updated_at": "1692089727",
  "created_by": 1,
  "updated_by": 1
} 
*/

  String? id;
  String? code;
  String? name;
  String? kapasitas;
  String? merk;
  String? countryOfOrigin;
  String? equipmentSerialNumber;
  String? model;
  String? powerSource;
  String? merkEngine;
  String? engineType;
  String? serialNumberEngine;
  String? jenisAssetCode;
  String? regionalCode;
  String? cabangCode;
  String? tahun;
  String? isDelete;
  String? isDowntime;
  String? isActive;
  String? companyId;
  String? docStatus;
  String? apvLevel;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  BAModelDataAsset({
    this.id,
    this.code,
    this.name,
    this.kapasitas,
    this.merk,
    this.countryOfOrigin,
    this.equipmentSerialNumber,
    this.model,
    this.powerSource,
    this.merkEngine,
    this.engineType,
    this.serialNumberEngine,
    this.jenisAssetCode,
    this.regionalCode,
    this.cabangCode,
    this.tahun,
    this.isDelete,
    this.isDowntime,
    this.isActive,
    this.companyId,
    this.docStatus,
    this.apvLevel,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  BAModelDataAsset.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    kapasitas = json['kapasitas']?.toString();
    merk = json['merk']?.toString();
    countryOfOrigin = json['country_of_origin']?.toString();
    equipmentSerialNumber = json['equipment_serial_number']?.toString();
    model = json['model']?.toString();
    powerSource = json['power_source']?.toString();
    merkEngine = json['merk_engine']?.toString();
    engineType = json['engine_type']?.toString();
    serialNumberEngine = json['serial_number_engine']?.toString();
    jenisAssetCode = json['jenis_asset_code']?.toString();
    regionalCode = json['regional_code']?.toString();
    cabangCode = json['cabang_code']?.toString();
    tahun = json['tahun']?.toString();
    isDelete = json['is_delete']?.toString();
    isDowntime = json['is_downtime']?.toString();
    isActive = json['is_active']?.toString();
    companyId = json['company_id']?.toString();
    docStatus = json['doc_status']?.toString();
    apvLevel = json['apv_level']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['kapasitas'] = kapasitas;
    data['merk'] = merk;
    data['country_of_origin'] = countryOfOrigin;
    data['equipment_serial_number'] = equipmentSerialNumber;
    data['model'] = model;
    data['power_source'] = powerSource;
    data['merk_engine'] = merkEngine;
    data['engine_type'] = engineType;
    data['serial_number_engine'] = serialNumberEngine;
    data['jenis_asset_code'] = jenisAssetCode;
    data['regional_code'] = regionalCode;
    data['cabang_code'] = cabangCode;
    data['tahun'] = tahun;
    data['is_delete'] = isDelete;
    data['is_downtime'] = isDowntime;
    data['is_active'] = isActive;
    data['company_id'] = companyId;
    data['doc_status'] = docStatus;
    data['apv_level'] = apvLevel;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class BAModelDataTypeWork {
/*
{
  "code": "PDM",
  "name": "Predictive Maintenance",
  "status": 1
} 
*/

  String? code;
  String? name;
  String? status;

  BAModelDataTypeWork({
    this.code,
    this.name,
    this.status,
  });
  BAModelDataTypeWork.fromJson(Map<String, dynamic> json) {
    code = json['code']?.toString();
    name = json['name']?.toString();
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['name'] = name;
    data['status'] = status;
    return data;
  }
}

class BAModelData {
/*
{
  "id": 7794,
  "doc_no": "WO-2023-0000024",
  "asset_code": "ATRIA-00001",
  "asset_category_code": "A01",
  "ba_no_persetujuan": "00001/BA.PER/BIMOPS/VIII/2023",
  "ba_no_realisasi": null,
  "type_work": {
    "code": "PDM",
    "name": "Predictive Maintenance",
    "status": 1
  },
  "asset_meter_code": null,
  "type_trans": "realisasi",
  "date_doc": "2023-08-14",
  "cabang_code": "TEST",
  "regional_code": "REG03",
  "description": "testing",
  "doc_status": "Realisasi",
  "is_downtime": 1,
  "apv_level": 0,
  "preventive_maintanance_id": null,
  "jobplan_id": null,
  "workorder_id": null,
  "frequency_time_based": 0,
  "frequency_unit_based": null,
  "meter_reading": 0,
  "is_delete": 0,
  "company_id": 2,
  "status_part": "waiting",
  "date_start": "2023-08-14 00:00:00",
  "date_end": "2023-08-15 12:04:24",
  "created_at": 1692001731,
  "updated_at": 1692093865,
  "created_by": 1,
  "updated_by": 1,
  "is_mr": 1,
  "submit_rls": null,
  "start_downtime": null,
  "up_date": null,
  "asset": {
    "id": 543,
    "code": "ATRIA-00001",
    "name": "Aset BIMA",
    "kapasitas": "1000",
    "merk": "BIMA",
    "country_of_origin": null,
    "equipment_serial_number": null,
    "model": null,
    "power_source": null,
    "merk_engine": null,
    "engine_type": null,
    "serial_number_engine": null,
    "jenis_asset_code": "A01",
    "regional_code": "REG05",
    "cabang_code": "CAB27",
    "tahun": 2023,
    "is_delete": 0,
    "is_downtime": 1,
    "is_active": 1,
    "company_id": 1,
    "doc_status": "Completed",
    "apv_level": 2,
    "created_at": "1692089727",
    "updated_at": "1692089727",
    "created_by": 1,
    "updated_by": 1
  },
  "cabang": {
    "id": 27,
    "regional_code": "REG02",
    "code": "CAB27",
    "name": "KANTOR PUSAT",
    "description": "KANTOR PUSAT PT BIMA",
    "regional_name": "ANAK PERUSAHAAN",
    "is_delete": 0,
    "created_at": null,
    "created_by": null,
    "updated_at": 1698287966,
    "updated_by": 747,
    "unit_centra_id": 425,
    "unit_centra_code": "BIMA",
    "unit_centra_name": "PT BIMA",
    "delivery_point": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
    "address": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
    "is_mr": 0
  }
} 
*/

  String? id;
  String? docNo;
  String? assetCode;
  String? assetCategoryCode;
  String? baNoPersetujuan;
  String? baNoRealisasi;
  BAModelDataTypeWork? typeWork;
  String? assetMeterCode;
  String? typeTrans;
  String? dateDoc;
  String? cabangCode;
  String? regionalCode;
  String? description;
  String? docStatus;
  String? isDowntime;
  String? apvLevel;
  String? preventiveMaintananceId;
  String? jobplanId;
  String? workorderId;
  String? frequencyTimeBased;
  String? frequencyUnitBased;
  String? meterReading;
  String? isDelete;
  String? companyId;
  String? statusPart;
  String? dateStart;
  String? dateEnd;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  String? isMr;
  String? submitRls;
  String? startDowntime;
  String? upDate;
  BAModelDataAsset? asset;
  BAModelDataCabang? cabang;

  BAModelData({
    this.id,
    this.docNo,
    this.assetCode,
    this.assetCategoryCode,
    this.baNoPersetujuan,
    this.baNoRealisasi,
    this.typeWork,
    this.assetMeterCode,
    this.typeTrans,
    this.dateDoc,
    this.cabangCode,
    this.regionalCode,
    this.description,
    this.docStatus,
    this.isDowntime,
    this.apvLevel,
    this.preventiveMaintananceId,
    this.jobplanId,
    this.workorderId,
    this.frequencyTimeBased,
    this.frequencyUnitBased,
    this.meterReading,
    this.isDelete,
    this.companyId,
    this.statusPart,
    this.dateStart,
    this.dateEnd,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.isMr,
    this.submitRls,
    this.startDowntime,
    this.upDate,
    this.asset,
    this.cabang,
  });
  BAModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    docNo = json['doc_no']?.toString();
    assetCode = json['asset_code']?.toString();
    assetCategoryCode = json['asset_category_code']?.toString();
    baNoPersetujuan = json['ba_no_persetujuan']?.toString();
    baNoRealisasi = json['ba_no_realisasi']?.toString();
    typeWork = (json['type_work'] != null)
        ? BAModelDataTypeWork.fromJson(json['type_work'])
        : null;
    assetMeterCode = json['asset_meter_code']?.toString();
    typeTrans = json['type_trans']?.toString();
    dateDoc = json['date_doc']?.toString();
    cabangCode = json['cabang_code']?.toString();
    regionalCode = json['regional_code']?.toString();
    description = json['description']?.toString();
    docStatus = json['doc_status']?.toString();
    isDowntime = json['is_downtime']?.toString();
    apvLevel = json['apv_level']?.toString();
    preventiveMaintananceId = json['preventive_maintanance_id']?.toString();
    jobplanId = json['jobplan_id']?.toString();
    workorderId = json['workorder_id']?.toString();
    frequencyTimeBased = json['frequency_time_based']?.toString();
    frequencyUnitBased = json['frequency_unit_based']?.toString();
    meterReading = json['meter_reading']?.toString();
    isDelete = json['is_delete']?.toString();
    companyId = json['company_id']?.toString();
    statusPart = json['status_part']?.toString();
    dateStart = json['date_start']?.toString();
    dateEnd = json['date_end']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    isMr = json['is_mr']?.toString();
    submitRls = json['submit_rls']?.toString();
    startDowntime = json['start_downtime']?.toString();
    upDate = json['up_date']?.toString();
    asset = (json['asset'] != null)
        ? BAModelDataAsset.fromJson(json['asset'])
        : null;
    cabang = (json['cabang'] != null)
        ? BAModelDataCabang.fromJson(json['cabang'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['doc_no'] = docNo;
    data['asset_code'] = assetCode;
    data['asset_category_code'] = assetCategoryCode;
    data['ba_no_persetujuan'] = baNoPersetujuan;
    data['ba_no_realisasi'] = baNoRealisasi;
    if (typeWork != null) {
      data['type_work'] = typeWork!.toJson();
    }
    data['asset_meter_code'] = assetMeterCode;
    data['type_trans'] = typeTrans;
    data['date_doc'] = dateDoc;
    data['cabang_code'] = cabangCode;
    data['regional_code'] = regionalCode;
    data['description'] = description;
    data['doc_status'] = docStatus;
    data['is_downtime'] = isDowntime;
    data['apv_level'] = apvLevel;
    data['preventive_maintanance_id'] = preventiveMaintananceId;
    data['jobplan_id'] = jobplanId;
    data['workorder_id'] = workorderId;
    data['frequency_time_based'] = frequencyTimeBased;
    data['frequency_unit_based'] = frequencyUnitBased;
    data['meter_reading'] = meterReading;
    data['is_delete'] = isDelete;
    data['company_id'] = companyId;
    data['status_part'] = statusPart;
    data['date_start'] = dateStart;
    data['date_end'] = dateEnd;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['is_mr'] = isMr;
    data['submit_rls'] = submitRls;
    data['start_downtime'] = startDowntime;
    data['up_date'] = upDate;
    if (asset != null) {
      data['asset'] = asset!.toJson();
    }
    if (cabang != null) {
      data['cabang'] = cabang!.toJson();
    }
    return data;
  }
}

class BAModel {
/*
{
  "success": true,
  "data": [
    {
      "id": 7794,
      "doc_no": "WO-2023-0000024",
      "asset_code": "ATRIA-00001",
      "asset_category_code": "A01",
      "ba_no_persetujuan": "00001/BA.PER/BIMOPS/VIII/2023",
      "ba_no_realisasi": null,
      "type_work": {
        "code": "PDM",
        "name": "Predictive Maintenance",
        "status": 1
      },
      "asset_meter_code": null,
      "type_trans": "realisasi",
      "date_doc": "2023-08-14",
      "cabang_code": "TEST",
      "regional_code": "REG03",
      "description": "testing",
      "doc_status": "Realisasi",
      "is_downtime": 1,
      "apv_level": 0,
      "preventive_maintanance_id": null,
      "jobplan_id": null,
      "workorder_id": null,
      "frequency_time_based": 0,
      "frequency_unit_based": null,
      "meter_reading": 0,
      "is_delete": 0,
      "company_id": 2,
      "status_part": "waiting",
      "date_start": "2023-08-14 00:00:00",
      "date_end": "2023-08-15 12:04:24",
      "created_at": 1692001731,
      "updated_at": 1692093865,
      "created_by": 1,
      "updated_by": 1,
      "is_mr": 1,
      "submit_rls": null,
      "start_downtime": null,
      "up_date": null,
      "asset": {
        "id": 543,
        "code": "ATRIA-00001",
        "name": "Aset BIMA",
        "kapasitas": "1000",
        "merk": "BIMA",
        "country_of_origin": null,
        "equipment_serial_number": null,
        "model": null,
        "power_source": null,
        "merk_engine": null,
        "engine_type": null,
        "serial_number_engine": null,
        "jenis_asset_code": "A01",
        "regional_code": "REG05",
        "cabang_code": "CAB27",
        "tahun": 2023,
        "is_delete": 0,
        "is_downtime": 1,
        "is_active": 1,
        "company_id": 1,
        "doc_status": "Completed",
        "apv_level": 2,
        "created_at": "1692089727",
        "updated_at": "1692089727",
        "created_by": 1,
        "updated_by": 1
      },
      "cabang": {
        "id": 27,
        "regional_code": "REG02",
        "code": "CAB27",
        "name": "KANTOR PUSAT",
        "description": "KANTOR PUSAT PT BIMA",
        "regional_name": "ANAK PERUSAHAAN",
        "is_delete": 0,
        "created_at": null,
        "created_by": null,
        "updated_at": 1698287966,
        "updated_by": 747,
        "unit_centra_id": 425,
        "unit_centra_code": "BIMA",
        "unit_centra_name": "PT BIMA",
        "delivery_point": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
        "address": "jalan Perak Timur No 428 Pabean Cantian Surabaya",
        "is_mr": 0
      }
    }
  ],
  "page": 1,
  "length": 30,
  "message": "Sukses"
} 
*/

  bool? success;
  List<BAModelData?>? data;
  String? page;
  String? length;
  String? message;

  BAModel({
    this.success,
    this.data,
    this.page,
    this.length,
    this.message,
  });
  BAModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <BAModelData>[];
      v.forEach((v) {
        arr0.add(BAModelData.fromJson(v));
      });
      this.data = arr0;
    }
    page = json['page']?.toString();
    length = json['length']?.toString();
    message = json['Message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['page'] = page;
    data['length'] = length;
    data['Message'] = message;
    return data;
  }
}
