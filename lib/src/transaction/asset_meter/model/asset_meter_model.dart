///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class AssetMeterModelDataCompany {
/*
{
  "id": 2,
  "name": "SPMT",
  "email": "plmt@pelindomultiterminal.co.id",
  "nppkp": "ANAK PERUSAHAAN",
  "alamat": "Jl. Lingkar Pelabuhan No. 1,Belawan, Medan 20411",
  "npwp": "",
  "website": "pelindomultiterminal.co.id",
  "telepon": "(061) 41000055",
  "sap_id": 2,
  "is_delete": 0,
  "is_active": 1,
  "token": null,
  "created_at": null,
  "updated_at": "1659061847",
  "created_by": null,
  "updated_by": "1"
} 
*/

  String? id;
  String? name;
  String? email;
  String? nppkp;
  String? alamat;
  String? npwp;
  String? website;
  String? telepon;
  String? sapId;
  String? isDelete;
  String? isActive;
  String? token;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  AssetMeterModelDataCompany({
    this.id,
    this.name,
    this.email,
    this.nppkp,
    this.alamat,
    this.npwp,
    this.website,
    this.telepon,
    this.sapId,
    this.isDelete,
    this.isActive,
    this.token,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  AssetMeterModelDataCompany.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    email = json['email']?.toString();
    nppkp = json['nppkp']?.toString();
    alamat = json['alamat']?.toString();
    npwp = json['npwp']?.toString();
    website = json['website']?.toString();
    telepon = json['telepon']?.toString();
    sapId = json['sap_id']?.toString();
    isDelete = json['is_delete']?.toString();
    isActive = json['is_active']?.toString();
    token = json['token']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['email'] = email;
    data['nppkp'] = nppkp;
    data['alamat'] = alamat;
    data['npwp'] = npwp;
    data['website'] = website;
    data['telepon'] = telepon;
    data['sap_id'] = sapId;
    data['is_delete'] = isDelete;
    data['is_active'] = isActive;
    data['token'] = token;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class AssetMeterModelDataRegional {
/*
{
  "id": 1,
  "code": "REG01",
  "name": "SPMT",
  "description": "SUBHOLDING PELINDO MULTI TERMINAL",
  "is_delete": 0,
  "created_date": null,
  "created_by": null,
  "updated_date": "2020-09-29",
  "updated_by": ""
} 
*/

  String? id;
  String? code;
  String? name;
  String? description;
  String? isDelete;
  String? createdDate;
  String? createdBy;
  String? updatedDate;
  String? updatedBy;

  AssetMeterModelDataRegional({
    this.id,
    this.code,
    this.name,
    this.description,
    this.isDelete,
    this.createdDate,
    this.createdBy,
    this.updatedDate,
    this.updatedBy,
  });
  AssetMeterModelDataRegional.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    isDelete = json['is_delete']?.toString();
    createdDate = json['created_date']?.toString();
    createdBy = json['created_by']?.toString();
    updatedDate = json['updated_date']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['is_delete'] = isDelete;
    data['created_date'] = createdDate;
    data['created_by'] = createdBy;
    data['updated_date'] = updatedDate;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class AssetMeterModelDataJenisAsset {
/*
{
  "id": 5,
  "code": "A05",
  "name": "Forklift Diesel",
  "description": "Forklift Diesel",
  "is_delete": 0,
  "is_active": 1,
  "created_at": "1655886659",
  "updated_at": "1658296445",
  "created_by": 1,
  "updated_by": 1
} 
*/

  String? id;
  String? code;
  String? name;
  String? description;
  String? isDelete;
  String? isActive;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  AssetMeterModelDataJenisAsset({
    this.id,
    this.code,
    this.name,
    this.description,
    this.isDelete,
    this.isActive,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  AssetMeterModelDataJenisAsset.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    isDelete = json['is_delete']?.toString();
    isActive = json['is_active']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['is_delete'] = isDelete;
    data['is_active'] = isActive;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class AssetMeterModelDataComponents {
/*
{
  "id": 2101,
  "subsystem_code": "SS1",
  "asset_code": "FLT010-0005",
  "system_code": "S1",
  "name": "IGNITION SWITCH",
  "type": null,
  "merk": null,
  "model": null,
  "is_delete": 0,
  "is_active": 1,
  "created_at": "1655970655",
  "updated_at": "1655972047",
  "created_by": 1,
  "updated_by": 1
} 
*/

  String? id;
  String? subsystemCode;
  String? assetCode;
  String? systemCode;
  String? name;
  String? type;
  String? merk;
  String? model;
  String? isDelete;
  String? isActive;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  AssetMeterModelDataComponents({
    this.id,
    this.subsystemCode,
    this.assetCode,
    this.systemCode,
    this.name,
    this.type,
    this.merk,
    this.model,
    this.isDelete,
    this.isActive,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  AssetMeterModelDataComponents.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    subsystemCode = json['subsystem_code']?.toString();
    assetCode = json['asset_code']?.toString();
    systemCode = json['system_code']?.toString();
    name = json['name']?.toString();
    type = json['type']?.toString();
    merk = json['merk']?.toString();
    model = json['model']?.toString();
    isDelete = json['is_delete']?.toString();
    isActive = json['is_active']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['subsystem_code'] = subsystemCode;
    data['asset_code'] = assetCode;
    data['system_code'] = systemCode;
    data['name'] = name;
    data['type'] = type;
    data['merk'] = merk;
    data['model'] = model;
    data['is_delete'] = isDelete;
    data['is_active'] = isActive;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class AssetMeterModelDataCabang {
/*
{
  "id": 34,
  "regional_code": "REG01",
  "code": "CAB06",
  "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
  "description": "Pelabuhan Tanjung Perak (Jamrud)",
  "regional_name": "JAWA TIMUR",
  "is_delete": 0,
  "created_at": null,
  "created_by": null,
  "updated_at": 1698288043,
  "updated_by": 747,
  "unit_centra_id": 34,
  "unit_centra_code": "NMJ",
  "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
  "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
  "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
  "is_mr": 1
} 
*/

  String? id;
  String? regionalCode;
  String? code;
  String? name;
  String? description;
  String? regionalName;
  String? isDelete;
  String? createdAt;
  String? createdBy;
  String? updatedAt;
  String? updatedBy;
  String? unitCentraId;
  String? unitCentraCode;
  String? unitCentraName;
  String? deliveryPoint;
  String? address;
  String? isMr;

  AssetMeterModelDataCabang({
    this.id,
    this.regionalCode,
    this.code,
    this.name,
    this.description,
    this.regionalName,
    this.isDelete,
    this.createdAt,
    this.createdBy,
    this.updatedAt,
    this.updatedBy,
    this.unitCentraId,
    this.unitCentraCode,
    this.unitCentraName,
    this.deliveryPoint,
    this.address,
    this.isMr,
  });
  AssetMeterModelDataCabang.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    regionalCode = json['regional_code']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    regionalName = json['regional_name']?.toString();
    isDelete = json['is_delete']?.toString();
    createdAt = json['created_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedAt = json['updated_at']?.toString();
    updatedBy = json['updated_by']?.toString();
    unitCentraId = json['unit_centra_id']?.toString();
    unitCentraCode = json['unit_centra_code']?.toString();
    unitCentraName = json['unit_centra_name']?.toString();
    deliveryPoint = json['delivery_point']?.toString();
    address = json['address']?.toString();
    isMr = json['is_mr']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['regional_code'] = regionalCode;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['regional_name'] = regionalName;
    data['is_delete'] = isDelete;
    data['created_at'] = createdAt;
    data['created_by'] = createdBy;
    data['updated_at'] = updatedAt;
    data['updated_by'] = updatedBy;
    data['unit_centra_id'] = unitCentraId;
    data['unit_centra_code'] = unitCentraCode;
    data['unit_centra_name'] = unitCentraName;
    data['delivery_point'] = deliveryPoint;
    data['address'] = address;
    data['is_mr'] = isMr;
    return data;
  }
}

class AssetMeterModelData {
/*
{
  "id": 46,
  "code": "FLT010-0005",
  "name": "FLD-05-10T Mitsubishi-Gresik-Jamrud",
  "kapasitas": "10 Ton",
  "merk": "Mitsubishi",
  "jenis_asset_code": "A05",
  "regional_code": "REG01",
  "cabang_code": "CAB06",
  "tahun": 0,
  "is_delete": 0,
  "is_downtime": 0,
  "is_active": 1,
  "company_id": 2,
  "doc_status": "Completed",
  "apv_level": 0,
  "created_at": "1655891721",
  "updated_at": "1655895514",
  "created_by": 4,
  "updated_by": 1,
  "country_of_origin": null,
  "equipment_serial_number": null,
  "model": null,
  "power_source": null,
  "merk_engine": null,
  "engine_type": null,
  "serial_number_engine": null,
  "downtime": 0,
  "exist": 16,
  "cabang": {
    "id": 34,
    "regional_code": "REG01",
    "code": "CAB06",
    "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
    "description": "Pelabuhan Tanjung Perak (Jamrud)",
    "regional_name": "JAWA TIMUR",
    "is_delete": 0,
    "created_at": null,
    "created_by": null,
    "updated_at": 1698288043,
    "updated_by": 747,
    "unit_centra_id": 34,
    "unit_centra_code": "NMJ",
    "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
    "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
    "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
    "is_mr": 1
  },
  "components": [
    {
      "id": 2101,
      "subsystem_code": "SS1",
      "asset_code": "FLT010-0005",
      "system_code": "S1",
      "name": "IGNITION SWITCH",
      "type": null,
      "merk": null,
      "model": null,
      "is_delete": 0,
      "is_active": 1,
      "created_at": "1655970655",
      "updated_at": "1655972047",
      "created_by": 1,
      "updated_by": 1
    }
  ],
  "jenis_asset": {
    "id": 5,
    "code": "A05",
    "name": "Forklift Diesel",
    "description": "Forklift Diesel",
    "is_delete": 0,
    "is_active": 1,
    "created_at": "1655886659",
    "updated_at": "1658296445",
    "created_by": 1,
    "updated_by": 1
  },
  "regional": {
    "id": 1,
    "code": "REG01",
    "name": "SPMT",
    "description": "SUBHOLDING PELINDO MULTI TERMINAL",
    "is_delete": 0,
    "created_date": null,
    "created_by": null,
    "updated_date": "2020-09-29",
    "updated_by": ""
  },
  "company": {
    "id": 2,
    "name": "SPMT",
    "email": "plmt@pelindomultiterminal.co.id",
    "nppkp": "ANAK PERUSAHAAN",
    "alamat": "Jl. Lingkar Pelabuhan No. 1,Belawan, Medan 20411",
    "npwp": "",
    "website": "pelindomultiterminal.co.id",
    "telepon": "(061) 41000055",
    "sap_id": 2,
    "is_delete": 0,
    "is_active": 1,
    "token": null,
    "created_at": null,
    "updated_at": "1659061847",
    "created_by": null,
    "updated_by": "1"
  },
  "file": [
    null
  ],
  "approver": null
} 
*/

  String? id;
  String? code;
  String? name;
  String? kapasitas;
  String? merk;
  String? jenisAssetCode;
  String? regionalCode;
  String? cabangCode;
  String? tahun;
  String? isDelete;
  String? isDowntime;
  String? isActive;
  String? companyId;
  String? docStatus;
  String? apvLevel;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  String? countryOfOrigin;
  String? equipmentSerialNumber;
  String? model;
  String? powerSource;
  String? merkEngine;
  String? engineType;
  String? serialNumberEngine;
  String? downtime;
  String? exist;
  AssetMeterModelDataCabang? cabang;
  List<AssetMeterModelDataComponents?>? components;
  AssetMeterModelDataJenisAsset? jenisAsset;
  AssetMeterModelDataRegional? regional;
  AssetMeterModelDataCompany? company;
  List<String?>? file;
  String? approver;

  AssetMeterModelData({
    this.id,
    this.code,
    this.name,
    this.kapasitas,
    this.merk,
    this.jenisAssetCode,
    this.regionalCode,
    this.cabangCode,
    this.tahun,
    this.isDelete,
    this.isDowntime,
    this.isActive,
    this.companyId,
    this.docStatus,
    this.apvLevel,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.countryOfOrigin,
    this.equipmentSerialNumber,
    this.model,
    this.powerSource,
    this.merkEngine,
    this.engineType,
    this.serialNumberEngine,
    this.downtime,
    this.exist,
    this.cabang,
    this.components,
    this.jenisAsset,
    this.regional,
    this.company,
    this.file,
    this.approver,
  });
  AssetMeterModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    kapasitas = json['kapasitas']?.toString();
    merk = json['merk']?.toString();
    jenisAssetCode = json['jenis_asset_code']?.toString();
    regionalCode = json['regional_code']?.toString();
    cabangCode = json['cabang_code']?.toString();
    tahun = json['tahun']?.toString();
    isDelete = json['is_delete']?.toString();
    isDowntime = json['is_downtime']?.toString();
    isActive = json['is_active']?.toString();
    companyId = json['company_id']?.toString();
    docStatus = json['doc_status']?.toString();
    apvLevel = json['apv_level']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    countryOfOrigin = json['country_of_origin']?.toString();
    equipmentSerialNumber = json['equipment_serial_number']?.toString();
    model = json['model']?.toString();
    powerSource = json['power_source']?.toString();
    merkEngine = json['merk_engine']?.toString();
    engineType = json['engine_type']?.toString();
    serialNumberEngine = json['serial_number_engine']?.toString();
    downtime = json['downtime']?.toString();
    exist = json['exist']?.toString();
    cabang = (json['cabang'] != null)
        ? AssetMeterModelDataCabang.fromJson(json['cabang'])
        : null;
    if (json['components'] != null) {
      final v = json['components'];
      final arr0 = <AssetMeterModelDataComponents>[];
      v.forEach((v) {
        arr0.add(AssetMeterModelDataComponents.fromJson(v));
      });
      components = arr0;
    }
    jenisAsset = (json['jenis_asset'] != null)
        ? AssetMeterModelDataJenisAsset.fromJson(json['jenis_asset'])
        : null;
    regional = (json['regional'] != null)
        ? AssetMeterModelDataRegional.fromJson(json['regional'])
        : null;
    company = (json['company'] != null)
        ? AssetMeterModelDataCompany.fromJson(json['company'])
        : null;
    // >>>>>>error<<<<<<
    approver = json['approver']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['kapasitas'] = kapasitas;
    data['merk'] = merk;
    data['jenis_asset_code'] = jenisAssetCode;
    data['regional_code'] = regionalCode;
    data['cabang_code'] = cabangCode;
    data['tahun'] = tahun;
    data['is_delete'] = isDelete;
    data['is_downtime'] = isDowntime;
    data['is_active'] = isActive;
    data['company_id'] = companyId;
    data['doc_status'] = docStatus;
    data['apv_level'] = apvLevel;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['country_of_origin'] = countryOfOrigin;
    data['equipment_serial_number'] = equipmentSerialNumber;
    data['model'] = model;
    data['power_source'] = powerSource;
    data['merk_engine'] = merkEngine;
    data['engine_type'] = engineType;
    data['serial_number_engine'] = serialNumberEngine;
    data['downtime'] = downtime;
    data['exist'] = exist;
    if (cabang != null) {
      data['cabang'] = cabang!.toJson();
    }
    if (components != null) {
      final v = components;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['components'] = arr0;
    }
    if (jenisAsset != null) {
      data['jenis_asset'] = jenisAsset!.toJson();
    }
    if (regional != null) {
      data['regional'] = regional!.toJson();
    }
    if (company != null) {
      data['company'] = company!.toJson();
    }
    // >>>>>>error<<<<<<
    data['approver'] = approver;
    return data;
  }
}

class AssetMeterModel {
/*
{
  "success": true,
  "data": [
    {
      "id": 46,
      "code": "FLT010-0005",
      "name": "FLD-05-10T Mitsubishi-Gresik-Jamrud",
      "kapasitas": "10 Ton",
      "merk": "Mitsubishi",
      "jenis_asset_code": "A05",
      "regional_code": "REG01",
      "cabang_code": "CAB06",
      "tahun": 0,
      "is_delete": 0,
      "is_downtime": 0,
      "is_active": 1,
      "company_id": 2,
      "doc_status": "Completed",
      "apv_level": 0,
      "created_at": "1655891721",
      "updated_at": "1655895514",
      "created_by": 4,
      "updated_by": 1,
      "country_of_origin": null,
      "equipment_serial_number": null,
      "model": null,
      "power_source": null,
      "merk_engine": null,
      "engine_type": null,
      "serial_number_engine": null,
      "downtime": 0,
      "exist": 16,
      "cabang": {
        "id": 34,
        "regional_code": "REG01",
        "code": "CAB06",
        "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
        "description": "Pelabuhan Tanjung Perak (Jamrud)",
        "regional_name": "JAWA TIMUR",
        "is_delete": 0,
        "created_at": null,
        "created_by": null,
        "updated_at": 1698288043,
        "updated_by": 747,
        "unit_centra_id": 34,
        "unit_centra_code": "NMJ",
        "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
        "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
        "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
        "is_mr": 1
      },
      "components": [
        {
          "id": 2101,
          "subsystem_code": "SS1",
          "asset_code": "FLT010-0005",
          "system_code": "S1",
          "name": "IGNITION SWITCH",
          "type": null,
          "merk": null,
          "model": null,
          "is_delete": 0,
          "is_active": 1,
          "created_at": "1655970655",
          "updated_at": "1655972047",
          "created_by": 1,
          "updated_by": 1
        }
      ],
      "jenis_asset": {
        "id": 5,
        "code": "A05",
        "name": "Forklift Diesel",
        "description": "Forklift Diesel",
        "is_delete": 0,
        "is_active": 1,
        "created_at": "1655886659",
        "updated_at": "1658296445",
        "created_by": 1,
        "updated_by": 1
      },
      "regional": {
        "id": 1,
        "code": "REG01",
        "name": "SPMT",
        "description": "SUBHOLDING PELINDO MULTI TERMINAL",
        "is_delete": 0,
        "created_date": null,
        "created_by": null,
        "updated_date": "2020-09-29",
        "updated_by": ""
      },
      "company": {
        "id": 2,
        "name": "SPMT",
        "email": "plmt@pelindomultiterminal.co.id",
        "nppkp": "ANAK PERUSAHAAN",
        "alamat": "Jl. Lingkar Pelabuhan No. 1,Belawan, Medan 20411",
        "npwp": "",
        "website": "pelindomultiterminal.co.id",
        "telepon": "(061) 41000055",
        "sap_id": 2,
        "is_delete": 0,
        "is_active": 1,
        "token": null,
        "created_at": null,
        "updated_at": "1659061847",
        "created_by": null,
        "updated_by": "1"
      },
      "file": [
        null
      ],
      "approver": null
    }
  ],
  "page": "1",
  "length": 10,
  "message": "Sukses"
} 
*/

  bool? success;
  List<AssetMeterModelData?>? data;
  String? page;
  String? length;
  String? message;

  AssetMeterModel({
    this.success,
    this.data,
    this.page,
    this.length,
    this.message,
  });
  AssetMeterModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <AssetMeterModelData>[];
      v.forEach((v) {
        arr0.add(AssetMeterModelData.fromJson(v));
      });
      this.data = arr0;
    }
    page = json['page']?.toString();
    length = json['length']?.toString();
    message = json['Message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['page'] = page;
    data['length'] = length;
    data['Message'] = message;
    return data;
  }
}
