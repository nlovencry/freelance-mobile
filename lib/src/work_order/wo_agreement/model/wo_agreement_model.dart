///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class WOAgreementModelDataWoToolsTool {
/*
{
  "id": 1,
  "name": "IMPACT ANGIN",
  "satuan": "PCS",
  "cabang_code": "CAB01",
  "keterangan": null,
  "condition": "100%",
  "qty": 1,
  "company_id": 1,
  "is_active": 1,
  "is_delete": 0,
  "created_at": null,
  "updated_at": null,
  "created_by": null,
  "updated_by": null
} 
*/

  String? id;
  String? name;
  String? satuan;
  String? cabangCode;
  String? keterangan;
  String? condition;
  String? qty;
  String? companyId;
  String? isActive;
  String? isDelete;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataWoToolsTool({
    this.id,
    this.name,
    this.satuan,
    this.cabangCode,
    this.keterangan,
    this.condition,
    this.qty,
    this.companyId,
    this.isActive,
    this.isDelete,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataWoToolsTool.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    satuan = json['satuan']?.toString();
    cabangCode = json['cabang_code']?.toString();
    keterangan = json['keterangan']?.toString();
    condition = json['condition']?.toString();
    qty = json['qty']?.toString();
    companyId = json['company_id']?.toString();
    isActive = json['is_active']?.toString();
    isDelete = json['is_delete']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['satuan'] = satuan;
    data['cabang_code'] = cabangCode;
    data['keterangan'] = keterangan;
    data['condition'] = condition;
    data['qty'] = qty;
    data['company_id'] = companyId;
    data['is_active'] = isActive;
    data['is_delete'] = isDelete;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataWoTools {
/*
{
  "id": 32046,
  "workorder_id": 7884,
  "tools_id": 1,
  "quantity": 2,
  "company_id": 1,
  "uom": "PCS",
  "created_at": 1712309489,
  "updated_at": null,
  "created_by": 8,
  "updated_by": null,
  "tool": {
    "id": 1,
    "name": "IMPACT ANGIN",
    "satuan": "PCS",
    "cabang_code": "CAB01",
    "keterangan": null,
    "condition": "100%",
    "qty": 1,
    "company_id": 1,
    "is_active": 1,
    "is_delete": 0,
    "created_at": null,
    "updated_at": null,
    "created_by": null,
    "updated_by": null
  }
} 
*/

  String? id;
  String? workorderId;
  String? toolsId;
  String? quantity;
  String? companyId;
  String? uom;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  WOAgreementModelDataWoToolsTool? tool;

  WOAgreementModelDataWoTools({
    this.id,
    this.workorderId,
    this.toolsId,
    this.quantity,
    this.companyId,
    this.uom,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.tool,
  });
  WOAgreementModelDataWoTools.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    toolsId = json['tools_id']?.toString();
    quantity = json['quantity']?.toString();
    companyId = json['company_id']?.toString();
    uom = json['uom']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    tool = (json['tool'] != null)
        ? WOAgreementModelDataWoToolsTool.fromJson(json['tool'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    data['tools_id'] = toolsId;
    data['quantity'] = quantity;
    data['company_id'] = companyId;
    data['uom'] = uom;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    if (tool != null) {
      data['tool'] = tool!.toJson();
    }
    return data;
  }
}

class WOAgreementModelDataWoServicesService {
/*
{
  "id": 6369,
  "centra_id": 362,
  "code": "DE-017-000001",
  "name": "JASA;REPAIR;ENERPACK",
  "description": null,
  "uom": "LUMPSUM",
  "valid_from": "2019-09-01",
  "valid_to": "9999-12-31",
  "doc_status": "Draft",
  "apv_level": 0,
  "is_delete": 0,
  "company_id": 1,
  "created_at": "",
  "updated_at": null,
  "created_by": null,
  "updated_by": null
} 
*/

  String? id;
  String? centraId;
  String? code;
  String? name;
  String? description;
  String? uom;
  String? validFrom;
  String? validTo;
  String? docStatus;
  String? apvLevel;
  String? isDelete;
  String? companyId;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataWoServicesService({
    this.id,
    this.centraId,
    this.code,
    this.name,
    this.description,
    this.uom,
    this.validFrom,
    this.validTo,
    this.docStatus,
    this.apvLevel,
    this.isDelete,
    this.companyId,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataWoServicesService.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    centraId = json['centra_id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    uom = json['uom']?.toString();
    validFrom = json['valid_from']?.toString();
    validTo = json['valid_to']?.toString();
    docStatus = json['doc_status']?.toString();
    apvLevel = json['apv_level']?.toString();
    isDelete = json['is_delete']?.toString();
    companyId = json['company_id']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['centra_id'] = centraId;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['uom'] = uom;
    data['valid_from'] = validFrom;
    data['valid_to'] = validTo;
    data['doc_status'] = docStatus;
    data['apv_level'] = apvLevel;
    data['is_delete'] = isDelete;
    data['company_id'] = companyId;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataWoServices {
/*
{
  "id": 304,
  "workorder_id": 7871,
  "service_id": "DE-017-000001",
  "qty": 4,
  "type_trans": "persetujuan",
  "created_at": 1711523757,
  "updated_at": 1711523757,
  "created_by": 1,
  "updated_by": 1,
  "service": {
    "id": 6369,
    "centra_id": 362,
    "code": "DE-017-000001",
    "name": "JASA;REPAIR;ENERPACK",
    "description": null,
    "uom": "LUMPSUM",
    "valid_from": "2019-09-01",
    "valid_to": "9999-12-31",
    "doc_status": "Draft",
    "apv_level": 0,
    "is_delete": 0,
    "company_id": 1,
    "created_at": "",
    "updated_at": null,
    "created_by": null,
    "updated_by": null
  }
} 
*/

  String? id;
  String? workorderId;
  String? serviceId;
  String? qty;
  String? typeTrans;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  WOAgreementModelDataWoServicesService? service;

  WOAgreementModelDataWoServices({
    this.id,
    this.workorderId,
    this.serviceId,
    this.qty,
    this.typeTrans,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.service,
  });
  WOAgreementModelDataWoServices.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    serviceId = json['service_id']?.toString();
    qty = json['qty']?.toString();
    typeTrans = json['type_trans']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    service = (json['service'] != null)
        ? WOAgreementModelDataWoServicesService.fromJson(json['service'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    data['service_id'] = serviceId;
    data['qty'] = qty;
    data['type_trans'] = typeTrans;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    if (service != null) {
      data['service'] = service!.toJson();
    }
    return data;
  }
}

class WOAgreementModelDataWoLaboursSkill {
/*
{
  "id": 6,
  "name": "Senior Mechanic"
} 
*/

  String? id;
  String? name;

  WOAgreementModelDataWoLaboursSkill({
    this.id,
    this.name,
  });
  WOAgreementModelDataWoLaboursSkill.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    return data;
  }
}

class WOAgreementModelDataWoLaboursCraft {
/*
{
  "id": 1,
  "name": "Mechanical"
} 
*/

  String? id;
  String? name;

  WOAgreementModelDataWoLaboursCraft({
    this.id,
    this.name,
  });
  WOAgreementModelDataWoLaboursCraft.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    return data;
  }
}

class WOAgreementModelDataWoLabours {
/*
{
  "id": 26562,
  "workorder_id": 7884,
  "craft": {
    "id": 1,
    "name": "Mechanical"
  },
  "personil": null,
  "skill": {
    "id": 6,
    "name": "Senior Mechanic"
  },
  "amount": "2",
  "created_at": 1712309489,
  "updated_at": null,
  "created_by": 8,
  "updated_by": null
} 
*/

  String? id;
  String? workorderId;
  WOAgreementModelDataWoLaboursCraft? craft;
  String? personil;
  WOAgreementModelDataWoLaboursSkill? skill;
  String? amount;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataWoLabours({
    this.id,
    this.workorderId,
    this.craft,
    this.personil,
    this.skill,
    this.amount,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataWoLabours.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    craft = (json['craft'] != null)
        ? WOAgreementModelDataWoLaboursCraft.fromJson(json['craft'])
        : null;
    personil = json['personil']?.toString();
    skill = (json['skill'] != null)
        ? WOAgreementModelDataWoLaboursSkill.fromJson(json['skill'])
        : null;
    amount = json['amount']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    if (craft != null) {
      data['craft'] = craft!.toJson();
    }
    data['personil'] = personil;
    if (skill != null) {
      data['skill'] = skill!.toJson();
    }
    data['amount'] = amount;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataWoFiles {
/*
{
  "id": 12108,
  "workorder_id": 7884,
  "type_trans": "realisasi",
  "keterangan": "Test Actv Wono",
  "status": null,
  "file": "http://bimops-api.erdata.id/storage/work_order/attachment/m7FyYc5JarRXEPKxNFMvuz2vYqgWpTOc-mbl.jpg",
  "file_name": "kr^d_rjrx[.jpg",
  "created_at": 1712309489,
  "updated_at": null,
  "created_by": 8,
  "updated_by": null
} 
*/

  String? id;
  String? workorderId;
  String? typeTrans;
  String? keterangan;
  String? status;
  String? file;
  String? fileName;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataWoFiles({
    this.id,
    this.workorderId,
    this.typeTrans,
    this.keterangan,
    this.status,
    this.file,
    this.fileName,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataWoFiles.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    typeTrans = json['type_trans']?.toString();
    keterangan = json['keterangan']?.toString();
    status = json['status']?.toString();
    file = json['file']?.toString();
    fileName = json['file_name']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    data['type_trans'] = typeTrans;
    data['keterangan'] = keterangan;
    data['status'] = status;
    data['file'] = file;
    data['file_name'] = fileName;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataWoActivities {
/*
{
  "id": 102181,
  "workorder_id": 7884,
  "task_number": 1,
  "task_name": "Task 2",
  "description": null,
  "type_trans": "persetujuan",
  "task_duration": "2",
  "created_at": 1712309488,
  "updated_at": null,
  "created_by": 8,
  "updated_by": null
} 
*/

  String? id;
  String? workorderId;
  String? taskNumber;
  String? taskName;
  String? description;
  String? typeTrans;
  String? taskDuration;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataWoActivities({
    this.id,
    this.workorderId,
    this.taskNumber,
    this.taskName,
    this.description,
    this.typeTrans,
    this.taskDuration,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataWoActivities.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    taskNumber = json['task_number']?.toString();
    taskName = json['task_name']?.toString();
    description = json['description']?.toString();
    typeTrans = json['type_trans']?.toString();
    taskDuration = json['task_duration']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    data['task_number'] = taskNumber;
    data['task_name'] = taskName;
    data['description'] = description;
    data['type_trans'] = typeTrans;
    data['task_duration'] = taskDuration;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataWoSpareparts {
/*
{
  "id": 9706,
  "workorder_id": 7884,
  "code": "AA-003-000168",
  "name": "0;KLEMP HOSE;1 1/4\"",
  "quantity": 0,
  "uom": "PCS",
  "type_trans": "persetujuan",
  "status": 10,
  "company_id": 1,
  "created_at": "1712309489",
  "updated_at": null,
  "created_by": "8",
  "updated_by": null,
  "wh_code": "1100",
  "wh_name": "BENOA",
  "unit_code": "1100",
  "unit_name": "Site Benoa",
  "price": "0.00",
  "eta": "2024-04-05",
  "description": "Wono Tes",
  "type": "Non OA"
} 
*/

  String? id;
  String? workorderId;
  String? code;
  String? name;
  String? quantity;
  String? uom;
  String? typeTrans;
  String? status;
  String? companyId;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  String? whCode;
  String? whName;
  String? unitCode;
  String? unitName;
  String? price;
  String? eta;
  String? description;
  String? type;

  WOAgreementModelDataWoSpareparts({
    this.id,
    this.workorderId,
    this.code,
    this.name,
    this.quantity,
    this.uom,
    this.typeTrans,
    this.status,
    this.companyId,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.whCode,
    this.whName,
    this.unitCode,
    this.unitName,
    this.price,
    this.eta,
    this.description,
    this.type,
  });
  WOAgreementModelDataWoSpareparts.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    workorderId = json['workorder_id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    quantity = json['quantity']?.toString();
    uom = json['uom']?.toString();
    typeTrans = json['type_trans']?.toString();
    status = json['status']?.toString();
    companyId = json['company_id']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    whCode = json['wh_code']?.toString();
    whName = json['wh_name']?.toString();
    unitCode = json['unit_code']?.toString();
    unitName = json['unit_name']?.toString();
    price = json['price']?.toString();
    eta = json['eta']?.toString();
    description = json['description']?.toString();
    type = json['type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['workorder_id'] = workorderId;
    data['code'] = code;
    data['name'] = name;
    data['quantity'] = quantity;
    data['uom'] = uom;
    data['type_trans'] = typeTrans;
    data['status'] = status;
    data['company_id'] = companyId;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['wh_code'] = whCode;
    data['wh_name'] = whName;
    data['unit_code'] = unitCode;
    data['unit_name'] = unitName;
    data['price'] = price;
    data['eta'] = eta;
    data['description'] = description;
    data['type'] = type;
    return data;
  }
}

class WOAgreementModelDataRegional {
/*
{
  "id": 1,
  "code": "REG01",
  "name": "SPMT",
  "description": "SUBHOLDING PELINDO MULTI TERMINAL",
  "is_delete": 0,
  "created_date": null,
  "created_by": null,
  "updated_date": "2020-09-29",
  "updated_by": ""
} 
*/

  String? id;
  String? code;
  String? name;
  String? description;
  String? isDelete;
  String? createdDate;
  String? createdBy;
  String? updatedDate;
  String? updatedBy;

  WOAgreementModelDataRegional({
    this.id,
    this.code,
    this.name,
    this.description,
    this.isDelete,
    this.createdDate,
    this.createdBy,
    this.updatedDate,
    this.updatedBy,
  });
  WOAgreementModelDataRegional.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    isDelete = json['is_delete']?.toString();
    createdDate = json['created_date']?.toString();
    createdBy = json['created_by']?.toString();
    updatedDate = json['updated_date']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['is_delete'] = isDelete;
    data['created_date'] = createdDate;
    data['created_by'] = createdBy;
    data['updated_date'] = updatedDate;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataUserCreate {
/*
{
  "id": 8,
  "username": "19950601831",
  "confirmation_token": null,
  "status": 1,
  "superadmin": 0,
  "created_at": 1657287323,
  "updated_at": 1657290383,
  "type": null,
  "company_id": 1,
  "personil_id": 537,
  "registration_ip": null,
  "bind_to_ip": "",
  "email": "",
  "email_confirmed": 0,
  "username_centra": null,
  "password_centra": null,
  "token_centra": null,
  "valid_token": null,
  "firebase_token": null
} 
*/

  String? id;
  String? username;
  String? confirmationToken;
  String? status;
  String? superadmin;
  String? createdAt;
  String? updatedAt;
  String? type;
  String? companyId;
  String? personilId;
  String? registrationIp;
  String? bindToIp;
  String? email;
  String? emailConfirmed;
  String? usernameCentra;
  String? passwordCentra;
  String? tokenCentra;
  String? validToken;
  String? firebaseToken;

  WOAgreementModelDataUserCreate({
    this.id,
    this.username,
    this.confirmationToken,
    this.status,
    this.superadmin,
    this.createdAt,
    this.updatedAt,
    this.type,
    this.companyId,
    this.personilId,
    this.registrationIp,
    this.bindToIp,
    this.email,
    this.emailConfirmed,
    this.usernameCentra,
    this.passwordCentra,
    this.tokenCentra,
    this.validToken,
    this.firebaseToken,
  });
  WOAgreementModelDataUserCreate.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    username = json['username']?.toString();
    confirmationToken = json['confirmation_token']?.toString();
    status = json['status']?.toString();
    superadmin = json['superadmin']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    type = json['type']?.toString();
    companyId = json['company_id']?.toString();
    personilId = json['personil_id']?.toString();
    registrationIp = json['registration_ip']?.toString();
    bindToIp = json['bind_to_ip']?.toString();
    email = json['email']?.toString();
    emailConfirmed = json['email_confirmed']?.toString();
    usernameCentra = json['username_centra']?.toString();
    passwordCentra = json['password_centra']?.toString();
    tokenCentra = json['token_centra']?.toString();
    validToken = json['valid_token']?.toString();
    firebaseToken = json['firebase_token']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['confirmation_token'] = confirmationToken;
    data['status'] = status;
    data['superadmin'] = superadmin;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['type'] = type;
    data['company_id'] = companyId;
    data['personil_id'] = personilId;
    data['registration_ip'] = registrationIp;
    data['bind_to_ip'] = bindToIp;
    data['email'] = email;
    data['email_confirmed'] = emailConfirmed;
    data['username_centra'] = usernameCentra;
    data['password_centra'] = passwordCentra;
    data['token_centra'] = tokenCentra;
    data['valid_token'] = validToken;
    data['firebase_token'] = firebaseToken;
    return data;
  }
}

class WOAgreementModelDataCabang {
/*
{
  "id": 34,
  "regional_code": "REG01",
  "code": "CAB06",
  "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
  "description": "Pelabuhan Tanjung Perak (Jamrud)",
  "regional_name": "JAWA TIMUR",
  "is_delete": 0,
  "created_at": null,
  "created_by": null,
  "updated_at": 1698288043,
  "updated_by": 747,
  "unit_centra_id": 34,
  "unit_centra_code": "NMJ",
  "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
  "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
  "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
  "is_mr": 1
} 
*/

  String? id;
  String? regionalCode;
  String? code;
  String? name;
  String? description;
  String? regionalName;
  String? isDelete;
  String? createdAt;
  String? createdBy;
  String? updatedAt;
  String? updatedBy;
  String? unitCentraId;
  String? unitCentraCode;
  String? unitCentraName;
  String? deliveryPoint;
  String? address;
  String? isMr;

  WOAgreementModelDataCabang({
    this.id,
    this.regionalCode,
    this.code,
    this.name,
    this.description,
    this.regionalName,
    this.isDelete,
    this.createdAt,
    this.createdBy,
    this.updatedAt,
    this.updatedBy,
    this.unitCentraId,
    this.unitCentraCode,
    this.unitCentraName,
    this.deliveryPoint,
    this.address,
    this.isMr,
  });
  WOAgreementModelDataCabang.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    regionalCode = json['regional_code']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    description = json['description']?.toString();
    regionalName = json['regional_name']?.toString();
    isDelete = json['is_delete']?.toString();
    createdAt = json['created_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedAt = json['updated_at']?.toString();
    updatedBy = json['updated_by']?.toString();
    unitCentraId = json['unit_centra_id']?.toString();
    unitCentraCode = json['unit_centra_code']?.toString();
    unitCentraName = json['unit_centra_name']?.toString();
    deliveryPoint = json['delivery_point']?.toString();
    address = json['address']?.toString();
    isMr = json['is_mr']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['regional_code'] = regionalCode;
    data['code'] = code;
    data['name'] = name;
    data['description'] = description;
    data['regional_name'] = regionalName;
    data['is_delete'] = isDelete;
    data['created_at'] = createdAt;
    data['created_by'] = createdBy;
    data['updated_at'] = updatedAt;
    data['updated_by'] = updatedBy;
    data['unit_centra_id'] = unitCentraId;
    data['unit_centra_code'] = unitCentraCode;
    data['unit_centra_name'] = unitCentraName;
    data['delivery_point'] = deliveryPoint;
    data['address'] = address;
    data['is_mr'] = isMr;
    return data;
  }
}

class WOAgreementModelDataAsset {
/*
{
  "id": 1,
  "code": "BCT015-0008",
  "name": "Bucket-08 15 Ton",
  "kapasitas": "15 Ton",
  "merk": "-",
  "country_of_origin": null,
  "equipment_serial_number": null,
  "model": null,
  "power_source": null,
  "merk_engine": null,
  "engine_type": null,
  "serial_number_engine": null,
  "jenis_asset_code": "A14",
  "regional_code": "REG01",
  "cabang_code": "CAB03",
  "tahun": 0,
  "is_delete": 0,
  "is_downtime": 0,
  "is_active": 1,
  "company_id": 2,
  "doc_status": "Completed",
  "apv_level": 1,
  "created_at": "1655891721",
  "updated_at": "1659063671",
  "created_by": "Dusty Widha Hutama",
  "updated_by": 4
} 
*/

  String? id;
  String? code;
  String? name;
  String? kapasitas;
  String? merk;
  String? countryOfOrigin;
  String? equipmentSerialNumber;
  String? model;
  String? powerSource;
  String? merkEngine;
  String? engineType;
  String? serialNumberEngine;
  String? jenisAssetCode;
  String? regionalCode;
  String? cabangCode;
  String? tahun;
  String? isDelete;
  String? isDowntime;
  String? isActive;
  String? companyId;
  String? docStatus;
  String? apvLevel;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;

  WOAgreementModelDataAsset({
    this.id,
    this.code,
    this.name,
    this.kapasitas,
    this.merk,
    this.countryOfOrigin,
    this.equipmentSerialNumber,
    this.model,
    this.powerSource,
    this.merkEngine,
    this.engineType,
    this.serialNumberEngine,
    this.jenisAssetCode,
    this.regionalCode,
    this.cabangCode,
    this.tahun,
    this.isDelete,
    this.isDowntime,
    this.isActive,
    this.companyId,
    this.docStatus,
    this.apvLevel,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
  });
  WOAgreementModelDataAsset.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    name = json['name']?.toString();
    kapasitas = json['kapasitas']?.toString();
    merk = json['merk']?.toString();
    countryOfOrigin = json['country_of_origin']?.toString();
    equipmentSerialNumber = json['equipment_serial_number']?.toString();
    model = json['model']?.toString();
    powerSource = json['power_source']?.toString();
    merkEngine = json['merk_engine']?.toString();
    engineType = json['engine_type']?.toString();
    serialNumberEngine = json['serial_number_engine']?.toString();
    jenisAssetCode = json['jenis_asset_code']?.toString();
    regionalCode = json['regional_code']?.toString();
    cabangCode = json['cabang_code']?.toString();
    tahun = json['tahun']?.toString();
    isDelete = json['is_delete']?.toString();
    isDowntime = json['is_downtime']?.toString();
    isActive = json['is_active']?.toString();
    companyId = json['company_id']?.toString();
    docStatus = json['doc_status']?.toString();
    apvLevel = json['apv_level']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['name'] = name;
    data['kapasitas'] = kapasitas;
    data['merk'] = merk;
    data['country_of_origin'] = countryOfOrigin;
    data['equipment_serial_number'] = equipmentSerialNumber;
    data['model'] = model;
    data['power_source'] = powerSource;
    data['merk_engine'] = merkEngine;
    data['engine_type'] = engineType;
    data['serial_number_engine'] = serialNumberEngine;
    data['jenis_asset_code'] = jenisAssetCode;
    data['regional_code'] = regionalCode;
    data['cabang_code'] = cabangCode;
    data['tahun'] = tahun;
    data['is_delete'] = isDelete;
    data['is_downtime'] = isDowntime;
    data['is_active'] = isActive;
    data['company_id'] = companyId;
    data['doc_status'] = docStatus;
    data['apv_level'] = apvLevel;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    return data;
  }
}

class WOAgreementModelDataAction {
/*
{
  "delete": true,
  "void": false,
  "reject": false,
  "approve": false,
  "submit": true,
  "edit": true
} 
*/

  bool? delete;
  bool? theVoid;
  bool? reject;
  bool? approve;
  bool? submit;
  bool? edit;

  WOAgreementModelDataAction({
    this.delete,
    this.theVoid,
    this.reject,
    this.approve,
    this.submit,
    this.edit,
  });
  WOAgreementModelDataAction.fromJson(Map<String, dynamic> json) {
    delete = json['delete'];
    theVoid = json['void'];
    reject = json['reject'];
    approve = json['approve'];
    submit = json['submit'];
    edit = json['edit'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['delete'] = delete;
    data['void'] = theVoid;
    data['reject'] = reject;
    data['approve'] = approve;
    data['submit'] = submit;
    data['edit'] = edit;
    return data;
  }
}

class WOAgreementModelDataTypeWork {
/*
{
  "code": "CM",
  "name": "Corrective Maintenance",
  "status": 1
} 
*/

  String? code;
  String? name;
  String? status;

  WOAgreementModelDataTypeWork({
    this.code,
    this.name,
    this.status,
  });
  WOAgreementModelDataTypeWork.fromJson(Map<String, dynamic> json) {
    code = json['code']?.toString();
    name = json['name']?.toString();
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['name'] = name;
    data['status'] = status;
    return data;
  }
}

class WOAgreementModelData {
/*
{
  "id": 7884,
  "doc_no": "WO-2024-0000060",
  "asset_code": "BCT015-0008",
  "asset_category_code": "A14",
  "ba_no_persetujuan": null,
  "ba_no_realisasi": null,
  "type_work": {
    "code": "CM",
    "name": "Corrective Maintenance",
    "status": 1
  },
  "asset_meter_code": null,
  "type_trans": "persetujuan",
  "date_doc": "2024-04-05",
  "cabang_code": "CAB06",
  "regional_code": "REG01",
  "description": "Test Actv Wono",
  "doc_status": "Draft",
  "is_downtime": 0,
  "apv_level": 0,
  "preventive_maintanance_id": null,
  "jobplan_id": null,
  "workorder_id": null,
  "frequency_time_based": 0,
  "frequency_unit_based": null,
  "meter_reading": 0,
  "is_delete": 0,
  "company_id": 1,
  "status_part": "waiting",
  "date_start": "2024-04-05 17:17:00",
  "date_end": "2024-04-05 19:17:00",
  "created_at": 1712309488,
  "updated_at": null,
  "created_by": 8,
  "updated_by": null,
  "is_mr": 1,
  "submit_rls": null,
  "start_downtime": null,
  "up_date": null,
  "workorder_name": null,
  "action": {
    "delete": true,
    "void": false,
    "reject": false,
    "approve": false,
    "submit": true,
    "edit": true
  },
  "asset": {
    "id": 1,
    "code": "BCT015-0008",
    "name": "Bucket-08 15 Ton",
    "kapasitas": "15 Ton",
    "merk": "-",
    "country_of_origin": null,
    "equipment_serial_number": null,
    "model": null,
    "power_source": null,
    "merk_engine": null,
    "engine_type": null,
    "serial_number_engine": null,
    "jenis_asset_code": "A14",
    "regional_code": "REG01",
    "cabang_code": "CAB03",
    "tahun": 0,
    "is_delete": 0,
    "is_downtime": 0,
    "is_active": 1,
    "company_id": 2,
    "doc_status": "Completed",
    "apv_level": 1,
    "created_at": "1655891721",
    "updated_at": "1659063671",
    "created_by": "Dusty Widha Hutama",
    "updated_by": 4
  },
  "cabang": {
    "id": 34,
    "regional_code": "REG01",
    "code": "CAB06",
    "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
    "description": "Pelabuhan Tanjung Perak (Jamrud)",
    "regional_name": "JAWA TIMUR",
    "is_delete": 0,
    "created_at": null,
    "created_by": null,
    "updated_at": 1698288043,
    "updated_by": 747,
    "unit_centra_id": 34,
    "unit_centra_code": "NMJ",
    "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
    "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
    "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
    "is_mr": 1
  },
  "user_create": {
    "id": 8,
    "username": "19950601831",
    "confirmation_token": null,
    "status": 1,
    "superadmin": 0,
    "created_at": 1657287323,
    "updated_at": 1657290383,
    "type": null,
    "company_id": 1,
    "personil_id": 537,
    "registration_ip": null,
    "bind_to_ip": "",
    "email": "",
    "email_confirmed": 0,
    "username_centra": null,
    "password_centra": null,
    "token_centra": null,
    "valid_token": null,
    "firebase_token": null
  },
  "regional": {
    "id": 1,
    "code": "REG01",
    "name": "SPMT",
    "description": "SUBHOLDING PELINDO MULTI TERMINAL",
    "is_delete": 0,
    "created_date": null,
    "created_by": null,
    "updated_date": "2020-09-29",
    "updated_by": ""
  },
  "wo_spareparts": [
    {
      "id": 9706,
      "workorder_id": 7884,
      "code": "AA-003-000168",
      "name": "0;KLEMP HOSE;1 1/4\"",
      "quantity": 0,
      "uom": "PCS",
      "type_trans": "persetujuan",
      "status": 10,
      "company_id": 1,
      "created_at": "1712309489",
      "updated_at": null,
      "created_by": "8",
      "updated_by": null,
      "wh_code": "1100",
      "wh_name": "BENOA",
      "unit_code": "1100",
      "unit_name": "Site Benoa",
      "price": "0.00",
      "eta": "2024-04-05",
      "description": "Wono Tes",
      "type": "Non OA"
    }
  ],
  "wo_activities": [
    {
      "id": 102181,
      "workorder_id": 7884,
      "task_number": 1,
      "task_name": "Task 2",
      "description": null,
      "type_trans": "persetujuan",
      "task_duration": "2",
      "created_at": 1712309488,
      "updated_at": null,
      "created_by": 8,
      "updated_by": null
    }
  ],
  "wo_failures": [
    null
  ],
  "wo_files": [
    {
      "id": 12108,
      "workorder_id": 7884,
      "type_trans": "realisasi",
      "keterangan": "Test Actv Wono",
      "status": null,
      "file": "http://bimops-api.erdata.id/storage/work_order/attachment/m7FyYc5JarRXEPKxNFMvuz2vYqgWpTOc-mbl.jpg",
      "file_name": "kr^d_rjrx[.jpg",
      "created_at": 1712309489,
      "updated_at": null,
      "created_by": 8,
      "updated_by": null
    }
  ],
  "wo_labours": [
    {
      "id": 26562,
      "workorder_id": 7884,
      "craft": {
        "id": 1,
        "name": "Mechanical"
      },
      "personil": null,
      "skill": {
        "id": 6,
        "name": "Senior Mechanic"
      },
      "amount": "2",
      "created_at": 1712309489,
      "updated_at": null,
      "created_by": 8,
      "updated_by": null
    }
  ],
  "wo_progress": [
    null
  ],
  "wo_services": [
    {
      "id": 304,
      "workorder_id": 7871,
      "service_id": "DE-017-000001",
      "qty": 4,
      "type_trans": "persetujuan",
      "created_at": 1711523757,
      "updated_at": 1711523757,
      "created_by": 1,
      "updated_by": 1,
      "service": {
        "id": 6369,
        "centra_id": 362,
        "code": "DE-017-000001",
        "name": "JASA;REPAIR;ENERPACK",
        "description": null,
        "uom": "LUMPSUM",
        "valid_from": "2019-09-01",
        "valid_to": "9999-12-31",
        "doc_status": "Draft",
        "apv_level": 0,
        "is_delete": 0,
        "company_id": 1,
        "created_at": "",
        "updated_at": null,
        "created_by": null,
        "updated_by": null
      }
    }
  ],
  "wo_tools": [
    {
      "id": 32046,
      "workorder_id": 7884,
      "tools_id": 1,
      "quantity": 2,
      "company_id": 1,
      "uom": "PCS",
      "created_at": 1712309489,
      "updated_at": null,
      "created_by": 8,
      "updated_by": null,
      "tool": {
        "id": 1,
        "name": "IMPACT ANGIN",
        "satuan": "PCS",
        "cabang_code": "CAB01",
        "keterangan": null,
        "condition": "100%",
        "qty": 1,
        "company_id": 1,
        "is_active": 1,
        "is_delete": 0,
        "created_at": null,
        "updated_at": null,
        "created_by": null,
        "updated_by": null
      }
    }
  ],
  "approver": null,
  "approver_p": null
} 
*/

  String? id;
  String? docNo;
  String? assetCode;
  String? assetCategoryCode;
  String? baNoPersetujuan;
  String? baNoRealisasi;
  WOAgreementModelDataTypeWork? typeWork;
  String? assetMeterCode;
  String? typeTrans;
  String? dateDoc;
  String? cabangCode;
  String? regionalCode;
  String? description;
  String? docStatus;
  String? isDowntime;
  String? apvLevel;
  String? preventiveMaintananceId;
  String? jobplanId;
  String? workorderId;
  String? frequencyTimeBased;
  String? frequencyUnitBased;
  String? meterReading;
  String? isDelete;
  String? companyId;
  String? statusPart;
  String? dateStart;
  String? dateEnd;
  String? createdAt;
  String? updatedAt;
  String? createdBy;
  String? updatedBy;
  String? isMr;
  String? submitRls;
  String? startDowntime;
  String? upDate;
  String? workorderName;
  WOAgreementModelDataAction? action;
  WOAgreementModelDataAsset? asset;
  WOAgreementModelDataCabang? cabang;
  WOAgreementModelDataUserCreate? userCreate;
  WOAgreementModelDataRegional? regional;
  List<WOAgreementModelDataWoSpareparts?>? woSpareparts;
  List<WOAgreementModelDataWoActivities?>? woActivities;
  List<String?>? woFailures;
  List<WOAgreementModelDataWoFiles?>? woFiles;
  List<WOAgreementModelDataWoLabours?>? woLabours;
  List<String?>? woProgress;
  List<WOAgreementModelDataWoServices?>? woServices;
  List<WOAgreementModelDataWoTools?>? woTools;
  String? approver;
  String? approverP;

  WOAgreementModelData({
    this.id,
    this.docNo,
    this.assetCode,
    this.assetCategoryCode,
    this.baNoPersetujuan,
    this.baNoRealisasi,
    this.typeWork,
    this.assetMeterCode,
    this.typeTrans,
    this.dateDoc,
    this.cabangCode,
    this.regionalCode,
    this.description,
    this.docStatus,
    this.isDowntime,
    this.apvLevel,
    this.preventiveMaintananceId,
    this.jobplanId,
    this.workorderId,
    this.frequencyTimeBased,
    this.frequencyUnitBased,
    this.meterReading,
    this.isDelete,
    this.companyId,
    this.statusPart,
    this.dateStart,
    this.dateEnd,
    this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.updatedBy,
    this.isMr,
    this.submitRls,
    this.startDowntime,
    this.upDate,
    this.workorderName,
    this.action,
    this.asset,
    this.cabang,
    this.userCreate,
    this.regional,
    this.woSpareparts,
    this.woActivities,
    this.woFailures,
    this.woFiles,
    this.woLabours,
    this.woProgress,
    this.woServices,
    this.woTools,
    this.approver,
    this.approverP,
  });
  WOAgreementModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    docNo = json['doc_no']?.toString();
    assetCode = json['asset_code']?.toString();
    assetCategoryCode = json['asset_category_code']?.toString();
    baNoPersetujuan = json['ba_no_persetujuan']?.toString();
    baNoRealisasi = json['ba_no_realisasi']?.toString();
    typeWork = (json['type_work'] != null)
        ? WOAgreementModelDataTypeWork.fromJson(json['type_work'])
        : null;
    assetMeterCode = json['asset_meter_code']?.toString();
    typeTrans = json['type_trans']?.toString();
    dateDoc = json['date_doc']?.toString();
    cabangCode = json['cabang_code']?.toString();
    regionalCode = json['regional_code']?.toString();
    description = json['description']?.toString();
    docStatus = json['doc_status']?.toString();
    isDowntime = json['is_downtime']?.toString();
    apvLevel = json['apv_level']?.toString();
    preventiveMaintananceId = json['preventive_maintanance_id']?.toString();
    jobplanId = json['jobplan_id']?.toString();
    workorderId = json['workorder_id']?.toString();
    frequencyTimeBased = json['frequency_time_based']?.toString();
    frequencyUnitBased = json['frequency_unit_based']?.toString();
    meterReading = json['meter_reading']?.toString();
    isDelete = json['is_delete']?.toString();
    companyId = json['company_id']?.toString();
    statusPart = json['status_part']?.toString();
    dateStart = json['date_start']?.toString();
    dateEnd = json['date_end']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    isMr = json['is_mr']?.toString();
    submitRls = json['submit_rls']?.toString();
    startDowntime = json['start_downtime']?.toString();
    upDate = json['up_date']?.toString();
    workorderName = json['workorder_name']?.toString();
    action = (json['action'] != null)
        ? WOAgreementModelDataAction.fromJson(json['action'])
        : null;
    asset = (json['asset'] != null)
        ? WOAgreementModelDataAsset.fromJson(json['asset'])
        : null;
    cabang = (json['cabang'] != null)
        ? WOAgreementModelDataCabang.fromJson(json['cabang'])
        : null;
    userCreate = (json['user_create'] != null)
        ? WOAgreementModelDataUserCreate.fromJson(json['user_create'])
        : null;
    regional = (json['regional'] != null)
        ? WOAgreementModelDataRegional.fromJson(json['regional'])
        : null;
    if (json['wo_spareparts'] != null) {
      final v = json['wo_spareparts'];
      final arr0 = <WOAgreementModelDataWoSpareparts>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoSpareparts.fromJson(v));
      });
      woSpareparts = arr0;
    }
    if (json['wo_activities'] != null) {
      final v = json['wo_activities'];
      final arr0 = <WOAgreementModelDataWoActivities>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoActivities.fromJson(v));
      });
      woActivities = arr0;
    }
    // >>>>>>error<<<<<<
    if (json['wo_files'] != null) {
      final v = json['wo_files'];
      final arr0 = <WOAgreementModelDataWoFiles>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoFiles.fromJson(v));
      });
      woFiles = arr0;
    }
    if (json['wo_labours'] != null) {
      final v = json['wo_labours'];
      final arr0 = <WOAgreementModelDataWoLabours>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoLabours.fromJson(v));
      });
      woLabours = arr0;
    }
    // >>>>>>error<<<<<<
    if (json['wo_services'] != null) {
      final v = json['wo_services'];
      final arr0 = <WOAgreementModelDataWoServices>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoServices.fromJson(v));
      });
      woServices = arr0;
    }
    if (json['wo_tools'] != null) {
      final v = json['wo_tools'];
      final arr0 = <WOAgreementModelDataWoTools>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelDataWoTools.fromJson(v));
      });
      woTools = arr0;
    }
    approver = json['approver']?.toString();
    approverP = json['approver_p']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['doc_no'] = docNo;
    data['asset_code'] = assetCode;
    data['asset_category_code'] = assetCategoryCode;
    data['ba_no_persetujuan'] = baNoPersetujuan;
    data['ba_no_realisasi'] = baNoRealisasi;
    if (typeWork != null) {
      data['type_work'] = typeWork!.toJson();
    }
    data['asset_meter_code'] = assetMeterCode;
    data['type_trans'] = typeTrans;
    data['date_doc'] = dateDoc;
    data['cabang_code'] = cabangCode;
    data['regional_code'] = regionalCode;
    data['description'] = description;
    data['doc_status'] = docStatus;
    data['is_downtime'] = isDowntime;
    data['apv_level'] = apvLevel;
    data['preventive_maintanance_id'] = preventiveMaintananceId;
    data['jobplan_id'] = jobplanId;
    data['workorder_id'] = workorderId;
    data['frequency_time_based'] = frequencyTimeBased;
    data['frequency_unit_based'] = frequencyUnitBased;
    data['meter_reading'] = meterReading;
    data['is_delete'] = isDelete;
    data['company_id'] = companyId;
    data['status_part'] = statusPart;
    data['date_start'] = dateStart;
    data['date_end'] = dateEnd;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['is_mr'] = isMr;
    data['submit_rls'] = submitRls;
    data['start_downtime'] = startDowntime;
    data['up_date'] = upDate;
    data['workorder_name'] = workorderName;
    if (action != null) {
      data['action'] = action!.toJson();
    }
    if (asset != null) {
      data['asset'] = asset!.toJson();
    }
    if (cabang != null) {
      data['cabang'] = cabang!.toJson();
    }
    if (userCreate != null) {
      data['user_create'] = userCreate!.toJson();
    }
    if (regional != null) {
      data['regional'] = regional!.toJson();
    }
    if (woSpareparts != null) {
      final v = woSpareparts;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_spareparts'] = arr0;
    }
    if (woActivities != null) {
      final v = woActivities;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_activities'] = arr0;
    }
    // >>>>>>error<<<<<<
    if (woFiles != null) {
      final v = woFiles;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_files'] = arr0;
    }
    if (woLabours != null) {
      final v = woLabours;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_labours'] = arr0;
    }
    // >>>>>>error<<<<<<
    if (woServices != null) {
      final v = woServices;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_services'] = arr0;
    }
    if (woTools != null) {
      final v = woTools;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['wo_tools'] = arr0;
    }
    data['approver'] = approver;
    data['approver_p'] = approverP;
    return data;
  }
}

class WOAgreementModel {
/*
{
  "success": true,
  "data": [
    {
      "id": 7884,
      "doc_no": "WO-2024-0000060",
      "asset_code": "BCT015-0008",
      "asset_category_code": "A14",
      "ba_no_persetujuan": null,
      "ba_no_realisasi": null,
      "type_work": {
        "code": "CM",
        "name": "Corrective Maintenance",
        "status": 1
      },
      "asset_meter_code": null,
      "type_trans": "persetujuan",
      "date_doc": "2024-04-05",
      "cabang_code": "CAB06",
      "regional_code": "REG01",
      "description": "Test Actv Wono",
      "doc_status": "Draft",
      "is_downtime": 0,
      "apv_level": 0,
      "preventive_maintanance_id": null,
      "jobplan_id": null,
      "workorder_id": null,
      "frequency_time_based": 0,
      "frequency_unit_based": null,
      "meter_reading": 0,
      "is_delete": 0,
      "company_id": 1,
      "status_part": "waiting",
      "date_start": "2024-04-05 17:17:00",
      "date_end": "2024-04-05 19:17:00",
      "created_at": 1712309488,
      "updated_at": null,
      "created_by": 8,
      "updated_by": null,
      "is_mr": 1,
      "submit_rls": null,
      "start_downtime": null,
      "up_date": null,
      "workorder_name": null,
      "action": {
        "delete": true,
        "void": false,
        "reject": false,
        "approve": false,
        "submit": true,
        "edit": true
      },
      "asset": {
        "id": 1,
        "code": "BCT015-0008",
        "name": "Bucket-08 15 Ton",
        "kapasitas": "15 Ton",
        "merk": "-",
        "country_of_origin": null,
        "equipment_serial_number": null,
        "model": null,
        "power_source": null,
        "merk_engine": null,
        "engine_type": null,
        "serial_number_engine": null,
        "jenis_asset_code": "A14",
        "regional_code": "REG01",
        "cabang_code": "CAB03",
        "tahun": 0,
        "is_delete": 0,
        "is_downtime": 0,
        "is_active": 1,
        "company_id": 2,
        "doc_status": "Completed",
        "apv_level": 1,
        "created_at": "1655891721",
        "updated_at": "1659063671",
        "created_by": "Dusty Widha Hutama",
        "updated_by": 4
      },
      "cabang": {
        "id": 34,
        "regional_code": "REG01",
        "code": "CAB06",
        "name": "PELABUHAN TANJUNG PERAK (JAMRUD)",
        "description": "Pelabuhan Tanjung Perak (Jamrud)",
        "regional_name": "JAWA TIMUR",
        "is_delete": 0,
        "created_at": null,
        "created_by": null,
        "updated_at": 1698288043,
        "updated_by": 747,
        "unit_centra_id": 34,
        "unit_centra_code": "NMJ",
        "unit_centra_name": "SITE PELABUHAN TANJUNG PERAK (NMJ)",
        "delivery_point": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
        "address": "TERMINAL PETIKEMAS NILAM - TANJUNG PERAK",
        "is_mr": 1
      },
      "user_create": {
        "id": 8,
        "username": "19950601831",
        "confirmation_token": null,
        "status": 1,
        "superadmin": 0,
        "created_at": 1657287323,
        "updated_at": 1657290383,
        "type": null,
        "company_id": 1,
        "personil_id": 537,
        "registration_ip": null,
        "bind_to_ip": "",
        "email": "",
        "email_confirmed": 0,
        "username_centra": null,
        "password_centra": null,
        "token_centra": null,
        "valid_token": null,
        "firebase_token": null
      },
      "regional": {
        "id": 1,
        "code": "REG01",
        "name": "SPMT",
        "description": "SUBHOLDING PELINDO MULTI TERMINAL",
        "is_delete": 0,
        "created_date": null,
        "created_by": null,
        "updated_date": "2020-09-29",
        "updated_by": ""
      },
      "wo_spareparts": [
        {
          "id": 9706,
          "workorder_id": 7884,
          "code": "AA-003-000168",
          "name": "0;KLEMP HOSE;1 1/4\"",
          "quantity": 0,
          "uom": "PCS",
          "type_trans": "persetujuan",
          "status": 10,
          "company_id": 1,
          "created_at": "1712309489",
          "updated_at": null,
          "created_by": "8",
          "updated_by": null,
          "wh_code": "1100",
          "wh_name": "BENOA",
          "unit_code": "1100",
          "unit_name": "Site Benoa",
          "price": "0.00",
          "eta": "2024-04-05",
          "description": "Wono Tes",
          "type": "Non OA"
        }
      ],
      "wo_activities": [
        {
          "id": 102181,
          "workorder_id": 7884,
          "task_number": 1,
          "task_name": "Task 2",
          "description": null,
          "type_trans": "persetujuan",
          "task_duration": "2",
          "created_at": 1712309488,
          "updated_at": null,
          "created_by": 8,
          "updated_by": null
        }
      ],
      "wo_failures": [
        null
      ],
      "wo_files": [
        {
          "id": 12108,
          "workorder_id": 7884,
          "type_trans": "realisasi",
          "keterangan": "Test Actv Wono",
          "status": null,
          "file": "http://bimops-api.erdata.id/storage/work_order/attachment/m7FyYc5JarRXEPKxNFMvuz2vYqgWpTOc-mbl.jpg",
          "file_name": "kr^d_rjrx[.jpg",
          "created_at": 1712309489,
          "updated_at": null,
          "created_by": 8,
          "updated_by": null
        }
      ],
      "wo_labours": [
        {
          "id": 26562,
          "workorder_id": 7884,
          "craft": {
            "id": 1,
            "name": "Mechanical"
          },
          "personil": null,
          "skill": {
            "id": 6,
            "name": "Senior Mechanic"
          },
          "amount": "2",
          "created_at": 1712309489,
          "updated_at": null,
          "created_by": 8,
          "updated_by": null
        }
      ],
      "wo_progress": [
        null
      ],
      "wo_services": [
        {
          "id": 304,
          "workorder_id": 7871,
          "service_id": "DE-017-000001",
          "qty": 4,
          "type_trans": "persetujuan",
          "created_at": 1711523757,
          "updated_at": 1711523757,
          "created_by": 1,
          "updated_by": 1,
          "service": {
            "id": 6369,
            "centra_id": 362,
            "code": "DE-017-000001",
            "name": "JASA;REPAIR;ENERPACK",
            "description": null,
            "uom": "LUMPSUM",
            "valid_from": "2019-09-01",
            "valid_to": "9999-12-31",
            "doc_status": "Draft",
            "apv_level": 0,
            "is_delete": 0,
            "company_id": 1,
            "created_at": "",
            "updated_at": null,
            "created_by": null,
            "updated_by": null
          }
        }
      ],
      "wo_tools": [
        {
          "id": 32046,
          "workorder_id": 7884,
          "tools_id": 1,
          "quantity": 2,
          "company_id": 1,
          "uom": "PCS",
          "created_at": 1712309489,
          "updated_at": null,
          "created_by": 8,
          "updated_by": null,
          "tool": {
            "id": 1,
            "name": "IMPACT ANGIN",
            "satuan": "PCS",
            "cabang_code": "CAB01",
            "keterangan": null,
            "condition": "100%",
            "qty": 1,
            "company_id": 1,
            "is_active": 1,
            "is_delete": 0,
            "created_at": null,
            "updated_at": null,
            "created_by": null,
            "updated_by": null
          }
        }
      ],
      "approver": null,
      "approver_p": null
    }
  ],
  "page": "2",
  "length": 10,
  "message": "Sukses"
} 
*/

  bool? success;
  List<WOAgreementModelData?>? data;
  String? page;
  String? length;
  String? message;

  WOAgreementModel({
    this.success,
    this.data,
    this.page,
    this.length,
    this.message,
  });
  WOAgreementModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <WOAgreementModelData>[];
      v.forEach((v) {
        arr0.add(WOAgreementModelData.fromJson(v));
      });
      this.data = arr0;
    }
    page = json['page']?.toString();
    length = json['length']?.toString();
    message = json['Message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['page'] = page;
    data['length'] = length;
    data['Message'] = message;
    return data;
  }
}
